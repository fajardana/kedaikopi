/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tubeskedaikopi;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author fajar
 */
public class User extends javax.swing.JFrame {

    /**
     * Creates new form User
     */
    
    login objLogin = new login();
    public User(){
        initComponents();
        orang.setText(objLogin.getID());
        fillCombo();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void fillCombo()
    {
             try{
            Statement st;
            ResultSet rs;
            Connection con = getConnection();
            String query ="select * from transaksimeja where status = 'available'";
            
            
            st = con.createStatement();
            rs = st.executeQuery(query);

            while(rs.next()){
                String name = rs.getString("meja");
                meja.addItem(name);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    
    }
    public Connection getConnection(){
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/kedaiKopi", "root","");
            return con;
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }
    
    public ArrayList<fungsiMenu> getMenuList(){
        ArrayList<fungsiMenu> menuList = new ArrayList<fungsiMenu>();
        Connection con = getConnection();
        String query = "SELECT * FROM menu";

        Statement st;
        ResultSet rs;
        
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            fungsiMenu FungsiMenu;
            
            while(rs.next()){
                FungsiMenu = new fungsiMenu(rs.getString("namaMenu"),Integer.parseInt(rs.getString("harga")));
                menuList.add(FungsiMenu);
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return menuList;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        food4 = new javax.swing.JCheckBox();
        jTextField12 = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        food5 = new javax.swing.JCheckBox();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        food6 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        meja = new javax.swing.JComboBox<>();
        jSpinner4 = new javax.swing.JSpinner();
        jSpinner5 = new javax.swing.JSpinner();
        jTextField2 = new javax.swing.JTextField();
        jSpinner6 = new javax.swing.JSpinner();
        jTextField3 = new javax.swing.JTextField();
        jSpinner7 = new javax.swing.JSpinner();
        txttotal = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jSpinner8 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jSpinner9 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jSpinner10 = new javax.swing.JSpinner();
        jSpinner11 = new javax.swing.JSpinner();
        jSpinner12 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        food1 = new javax.swing.JCheckBox();
        food2 = new javax.swing.JCheckBox();
        kopi1 = new javax.swing.JCheckBox();
        kopi2 = new javax.swing.JCheckBox();
        kopi3 = new javax.swing.JCheckBox();
        kopi4 = new javax.swing.JCheckBox();
        kopi5 = new javax.swing.JCheckBox();
        kopi6 = new javax.swing.JCheckBox();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        food3 = new javax.swing.JCheckBox();
        hitung = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        hitung1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        orang = new javax.swing.JLabel();
        Label1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        food4.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food4.setText("Onion Ring");
        food4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food4ActionPerformed(evt);
            }
        });

        jTextField12.setEditable(false);

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        food5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food5.setText("Pasta");
        food5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food5ActionPerformed(evt);
            }
        });

        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jSpinner3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner3StateChanged(evt);
            }
        });

        food6.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food6.setText("Sandwich");
        food6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food6ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 16)); // NOI18N
        jLabel5.setText("Meja");

        meja.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        meja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mejaActionPerformed(evt);
            }
        });

        jSpinner4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner4StateChanged(evt);
            }
        });

        jSpinner5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner5StateChanged(evt);
            }
        });

        jTextField2.setEditable(false);

        jSpinner6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner6StateChanged(evt);
            }
        });

        jTextField3.setEditable(false);

        jSpinner7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner7StateChanged(evt);
            }
        });

        txttotal.setEditable(false);
        txttotal.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), null));

        jTextField4.setEditable(false);

        jSpinner8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner8StateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel6.setText("Total Harga");

        jTextField5.setEditable(false);

        jSpinner9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner9StateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hobo Std", 0, 24)); // NOI18N
        jLabel2.setText("Coffee");

        jTextField6.setEditable(false);

        jSpinner10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner10StateChanged(evt);
            }
        });

        jSpinner11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner11StateChanged(evt);
            }
        });

        jSpinner12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner12StateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Hobo Std", 0, 24)); // NOI18N
        jLabel3.setText("Food");

        food1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food1.setText("French Fries ");
        food1.setActionCommand("Frenchfries");
        food1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food1ActionPerformed(evt);
            }
        });

        food2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food2.setText("Indomie");
        food2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food2ActionPerformed(evt);
            }
        });

        kopi1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi1.setText("Coffe Latte ");
        kopi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi1ActionPerformed(evt);
            }
        });

        kopi2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi2.setText("Cappuccino");
        kopi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi2ActionPerformed(evt);
            }
        });

        kopi3.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi3.setText("Flat White");
        kopi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi3ActionPerformed(evt);
            }
        });

        kopi4.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi4.setText("Mochaccino");
        kopi4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi4ActionPerformed(evt);
            }
        });

        kopi5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi5.setText("Espresso");
        kopi5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi5ActionPerformed(evt);
            }
        });

        kopi6.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        kopi6.setText("Americano");
        kopi6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kopi6ActionPerformed(evt);
            }
        });

        jTextField7.setEditable(false);

        jTextField8.setEditable(false);

        jTextField9.setEditable(false);

        food3.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        food3.setText("Toast");
        food3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                food3ActionPerformed(evt);
            }
        });

        hitung.setText("Hitung");
        hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitungActionPerformed(evt);
            }
        });

        jTextField10.setEditable(false);

        jTextField11.setEditable(false);

        hitung1.setText("Book");
        hitung1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitung1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Hobo Std", 0, 24)); // NOI18N
        jLabel4.setText("Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kopi3)
                                    .addComponent(kopi4)
                                    .addComponent(kopi5)
                                    .addComponent(kopi6)
                                    .addComponent(kopi1)
                                    .addComponent(kopi2))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jSpinner2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinner3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinner4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinner5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinner6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addComponent(hitung)))
                            .addComponent(jLabel2)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(food1)
                            .addComponent(food2)
                            .addComponent(food3)
                            .addComponent(food4)
                            .addComponent(food5)
                            .addComponent(food6)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSpinner8)
                                .addComponent(jSpinner9)
                                .addComponent(jSpinner10)
                                .addComponent(jSpinner11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hitung1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(299, 299, 299)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(meja, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(meja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food1)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food2)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food3)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food4)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food5)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(food6)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(hitung1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi4)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi5)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kopi6)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hitung))))
                .addContainerGap(139, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 890, 530));

        jPanel2.setBackground(new java.awt.Color(51, 51, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orang.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        orang.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(orang, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 20, -1, -1));

        Label1.setFont(new java.awt.Font("Segoe UI Black", 0, 16)); // NOI18N
        jPanel2.add(Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 40, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Coffee Store");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Sign Out");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 60, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 910, 90));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void food6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food6ActionPerformed
        String food = "Sandwich";
        int index=11;
        if (food6.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Sandwich'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField12.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField12.setText("");
        }
    }//GEN-LAST:event_food6ActionPerformed

    private void food5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food5ActionPerformed
        String food = "Pasta";
        int index=10;
        if (food5.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Pasta'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField11.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField11.setText("");
        }
    }//GEN-LAST:event_food5ActionPerformed

    private void food4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food4ActionPerformed
        String food = "Onion Ring";
        int index=9;
        if (food4.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Onion Ring'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField10.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField10.setText("");
        }
    }//GEN-LAST:event_food4ActionPerformed

    private void food3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food3ActionPerformed
        String food = "Toast";
        int index=8;
        if (food3.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Toast'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                
                jTextField9.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField9.setText("");
        }
    }//GEN-LAST:event_food3ActionPerformed

    private void food2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food2ActionPerformed
        String food = "Indomie";
        int index=7;
        if (food2.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Indomie'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField8.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField8.setText("");
        }
    }//GEN-LAST:event_food2ActionPerformed

    private void food1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_food1ActionPerformed
        String food = "French Fries";
        int index=6;
        if (food1.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'French Fries'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField7.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField7.setText("");
        }
    }//GEN-LAST:event_food1ActionPerformed

    private void kopi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi1ActionPerformed
     
        int index=0;
        if (kopi1.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Coffe Late'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField1.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField1.setText("");
        }
    }//GEN-LAST:event_kopi1ActionPerformed

    private void kopi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi2ActionPerformed
        String kopi = "Cappuccino";
        int index=1;
        if (kopi2.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Cappuccino'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField2.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField2.setText("");
        }
    }//GEN-LAST:event_kopi2ActionPerformed

    private void kopi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi3ActionPerformed
        String kopi = "Flat White";
        int index=2;
        if (kopi3.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Flat White'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField3.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField3.setText("");
        }
    }//GEN-LAST:event_kopi3ActionPerformed

    private void kopi4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi4ActionPerformed
        String kopi = "Mochaccino";
        int index=3;
        if (kopi4.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Mochaccino'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField4.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField4.setText("");
        }
    }//GEN-LAST:event_kopi4ActionPerformed

    private void kopi5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi5ActionPerformed
        String kopi = "Espresso";
        int index=4;
        if (kopi5.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Espresso'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                jTextField5.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField5.setText("");
        }
    }//GEN-LAST:event_kopi5ActionPerformed

    private void kopi6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kopi6ActionPerformed
        String kopi = "Americano";
        int index=5;
        if (kopi6.isSelected())
        {
            try {
                String sql = "select * from menu where namaMenu = 'Americano'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                
                jTextField6.setText(Integer.toString(getMenuList().get(index).getHarga()));
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }

        }else{
            jTextField6.setText("");
        }
    }//GEN-LAST:event_kopi6ActionPerformed

    private void hitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitungActionPerformed
        int total=0;
        int kembalian;
        if (kopi1.isSelected()){
             if((int) jSpinner1.getValue()>0){
            String harga=jTextField1.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (kopi2.isSelected()){
             if((int) jSpinner2.getValue()>0){
            String harga=jTextField2.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (kopi3.isSelected()){
             if((int) jSpinner3.getValue()>0){
            String harga=jTextField3.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (kopi4.isSelected()){
             if((int) jSpinner4.getValue()>0){
            String harga=jTextField4.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (kopi5.isSelected()){
            if((int) jSpinner5.getValue()>0){
            String harga=jTextField5.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (kopi6.isSelected()){
            if((int) jSpinner6.getValue()>0){
            String harga=jTextField6.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (food1.isSelected()){
            if((int) jSpinner7.getValue()>0){
            String harga=jTextField7.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         if (food2.isSelected()){
            if((int) jSpinner8.getValue()>0){
            String harga=jTextField8.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }if (food3.isSelected()){
            if((int) jSpinner9.getValue()>0){
            String harga=jTextField9.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }if (food4.isSelected()){
            if((int) jSpinner10.getValue()>0){
            String harga=jTextField10.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }if (food5.isSelected()){
            if((int) jSpinner11.getValue()>0){
            String harga=jTextField11.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }if (food6.isSelected()){
            if((int) jSpinner12.getValue()>0){
            String harga=jTextField12.getText();
            int hargaCL=Integer.parseInt(harga);
            total=total+hargaCL;
             }
         }
         txttotal.setText(""+total);
    }//GEN-LAST:event_hitungActionPerformed

    private void hitung1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitung1ActionPerformed
        
        try{
        
        if(kopi1.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi1.getText());
                ps.setInt(3, (int) jSpinner1.getValue());
                ps.setString(4, jTextField1.getText());
        
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(kopi2.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi2.getText());
                ps.setInt(3, (int) jSpinner2.getValue());
                ps.setString(4, jTextField2.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(kopi3.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi3.getText());
                ps.setInt(3, (int) jSpinner3.getValue());
                ps.setString(4, jTextField3.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(kopi4.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi4.getText());
                ps.setInt(3, (int) jSpinner4.getValue());
                ps.setString(4, jTextField4.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(kopi5.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi5.getText());
                ps.setInt(3, (int) jSpinner5.getValue());
                ps.setString(4, jTextField5.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(kopi6.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, kopi6.getText());
                ps.setInt(3, (int) jSpinner6.getValue());
                ps.setString(4, jTextField6.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food1.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food1.getText());
                ps.setInt(3, (int) jSpinner7.getValue());
                ps.setString(4, jTextField7.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food2.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food2.getText());
                ps.setInt(3, (int) jSpinner8.getValue());
                ps.setString(4, jTextField8.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food3.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food3.getText());
                ps.setInt(3, (int) jSpinner9.getValue());
                ps.setString(4, jTextField9.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food4.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food4.getText());
                ps.setInt(3, (int) jSpinner10.getValue());
                ps.setString(4, jTextField10.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food5.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food5.getText());
                ps.setInt(3, (int) jSpinner11.getValue());
                ps.setString(4, jTextField11.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if(food6.isSelected())
            {try{
            
                String sql="INSERT INTO transaksi (nama,namaMenu,jumlah,harga) "+" VALUES( ?, ?,?,?)";
                PreparedStatement ps = (PreparedStatement) config.configDB().prepareStatement(sql);          
                ps.setString(1, orang.getText());
                ps.setString(2, food6.getText());
                ps.setInt(3, (int) jSpinner12.getValue());
                ps.setString(4, jTextField12.getText());
     
                int val = ps.executeUpdate();
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql1="update transaksimeja set nama = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql1);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, orang.getText());
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            try{
                String sql2="update transaksimeja set status = ? where meja = ? ";
                PreparedStatement ps1 = (PreparedStatement) config.configDB().prepareStatement(sql2);
                ps1.setString(2, (String) meja.getSelectedItem());
                ps1.setString(1, "book");
                int val1 = ps1.executeUpdate();
                
            }catch (SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "Pesan Sukses");
        }catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        new User().setVisible(true); this.setVisible(false);
    }//GEN-LAST:event_hitung1ActionPerformed

    private void mejaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mejaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mejaActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        int total;
        String sum;
        if(kopi1.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Coffe Late'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner1.getValue();
                    sum=Integer.toString(total);
                    jTextField1.setText(sum);
                }
                
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        int total;
        String sum;
        if(kopi2.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Cappuccino'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner2.getValue();
                    sum=Integer.toString(total);
                    jTextField2.setText(sum);
                }
                
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jSpinner3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner3StateChanged
        int total;
        String sum;
        if(kopi3.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Flat White'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner3.getValue();
                    sum=Integer.toString(total);
                    jTextField3.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner3StateChanged

    private void jSpinner4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner4StateChanged
        int total;
        String sum;
        if(kopi4.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Mochaccino'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner4.getValue();
                    sum=Integer.toString(total);
                    jTextField4.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner4StateChanged

    private void jSpinner5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner5StateChanged
        int total;
        String sum;
        if(kopi5.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Espresso'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner5.getValue();
                    sum=Integer.toString(total);
                    jTextField5.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner5StateChanged

    private void jSpinner6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner6StateChanged
        int total;
        String sum;
        if(kopi6.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Americano'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner6.getValue();
                    sum=Integer.toString(total);
                    jTextField6.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner6StateChanged

    private void jSpinner7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner7StateChanged
        int total;
        String sum;
        if(food1.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'French Fries'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner7.getValue();
                    sum=Integer.toString(total);
                    jTextField7.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner7StateChanged

    private void jSpinner8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner8StateChanged
        int total;
        String sum;
        if(food2.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Indomie'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner8.getValue();
                    sum=Integer.toString(total);
                    jTextField8.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner8StateChanged

    private void jSpinner9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner9StateChanged
        int total;
        String sum;
        if(food3.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Toast'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner9.getValue();
                    sum=Integer.toString(total);
                    jTextField9.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner9StateChanged

    private void jSpinner10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner10StateChanged
        int total;
        String sum;
        if(food4.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Onion Ring'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner10.getValue();
                    sum=Integer.toString(total);
                    jTextField10.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner10StateChanged

    private void jSpinner11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner11StateChanged
        int total;
        String sum;
        if(food5.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Pasta'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner11.getValue();
                    sum=Integer.toString(total);
                    jTextField11.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner11StateChanged

    private void jSpinner12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner12StateChanged
        int total;
        String sum;
        if(food6.isSelected())
        {
                try {
                String sql = "select * from menu where namaMenu = 'Sandwich'";
                java.sql.Connection conn=(Connection)config.configDB();
                java.sql.Statement stm=conn.createStatement();
                java.sql.ResultSet res=stm.executeQuery(sql);
                if(res.next()){
                    total = res.getInt("harga")*(int)jSpinner12.getValue();
                    sum=Integer.toString(total);
                    jTextField12.setText(sum);
                }
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
            }
        }
    }//GEN-LAST:event_jSpinner12StateChanged

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        new login().setVisible(true);this.setVisible(false);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
       new login().setVisible(true);this.setVisible(false);
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JCheckBox food1;
    private javax.swing.JCheckBox food2;
    private javax.swing.JCheckBox food3;
    private javax.swing.JCheckBox food4;
    private javax.swing.JCheckBox food5;
    private javax.swing.JCheckBox food6;
    private javax.swing.JButton hitung;
    private javax.swing.JButton hitung1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner10;
    private javax.swing.JSpinner jSpinner11;
    private javax.swing.JSpinner jSpinner12;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JSpinner jSpinner8;
    private javax.swing.JSpinner jSpinner9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JCheckBox kopi1;
    private javax.swing.JCheckBox kopi2;
    private javax.swing.JCheckBox kopi3;
    private javax.swing.JCheckBox kopi4;
    private javax.swing.JCheckBox kopi5;
    private javax.swing.JCheckBox kopi6;
    private javax.swing.JComboBox<String> meja;
    private javax.swing.JLabel orang;
    private javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables

    
}
